version: '3.9'

services:

  pg:
    container_name: pg
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres_network

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${POSTGRES_USER}
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres_network

  minio:
    container_name: minio
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: ${AWS_ACCESS_KEY_ID}
      MINIO_SECRET_KEY: ${AWS_SECRET_ACCESS_KEY}
    command: server --console-address ":9001" /minio_data/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      - '9000:9000'
      - '9001:9001'
    networks:
      - minio_network
    volumes:
      - minio_data:/minio_data/

  mlflow:
    container_name: mlflow
    build: ./mlflow_image # Official mlflow_image is unstable.
    image: mlflow
    depends_on: [ pg, minio ]
    restart: always
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
    command:
      mlflow server
      --backend-store-uri
      postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pg/${POSTGRES_DB}
      --default-artifact-root s3://${AWS_S3_BUCKET}/
      --host 0.0.0.0
    ports:
      - "5000:5000"
    networks:
      - postgres_network
      - minio_network
      - mlflow_network

  fastapi_app:
    build: ../src/fastapi_app
    depends_on: [ mlflow ]
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    ports:
      - "80:8080"
    networks:
      - minio_network
      - mlflow_network

volumes:
  postgres_data:
  pgadmin_data:
  minio_data:

networks:
  postgres_network:
    driver: bridge
  minio_network:
    driver: bridge
  mlflow_network:
    driver: bridge